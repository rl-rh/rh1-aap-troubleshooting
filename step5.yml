---
- name: update gateway password
  hosts: localhost
  tasks:

  - name: Find the running aap-gateway pod name
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Pod
      namespace: "{{ install_namespace }}"
      label_selectors: app.kubernetes.io/component=aap-gateway
    register: gateway_pods

  - name: Extract and Aggressively Clean the Name (Final List Conversion Fix)
    ansible.builtin.set_fact:
      extracted_name_raw: >
        {{ gateway_pods.resources 
          | selectattr('status.phase', 'equalto', 'Running') 
          | map(attribute='metadata.name')
          | first | default('') | string }}

  - name: remove newline
    ansible.builtin.set_fact:      
      gateway_pod_name: "{{ extracted_name_raw | replace('\n', '') | replace('\r', '') | trim }}"

  - name: debug
    ansible.builtin.debug:
      var: gateway_pod_name

  - name: Fail if gateway pod name was not found
    ansible.builtin.fail:
      msg: "Could not find a running pod with the label 'app=aap-gateway'. Check pod status."
    when: gateway_pod_name is none or gateway_pod_name | length == 0

  - name: Execute password change command with raw Python (Avoids getpass)
    kubernetes.core.k8s_exec:
      namespace: "{{ install_namespace }}"
      pod: "{{ gateway_pod_name }}"
      container: "api"
      command: >-
        bash -c "echo 'from django.contrib.auth import get_user_model; User = get_user_model(); u=User.objects.get(username=\"admin\"); u.set_password(\"h2as43d978hj\"); u.save()' | aap-gateway-manage shell"
    register: command_output
    changed_when: command_output.rc == 0

  - name: Display command output (check for 'None' or success)
    ansible.builtin.debug:
      var: command_output

  - name: Get Active CSV Name from Subscription
    kubernetes.core.k8s_info:
      api_version: operators.coreos.com/v1alpha1
      kind: Subscription
      # Use the name of your specific Subscription
      name: "ansible-automation-platform-operator" 
      namespace: "{{ install_namespace }}"
    register: sub_info

  - name: Set Active CSV Name fact
    ansible.builtin.set_fact:
      # The currently installed CSV name is found in status.currentCSV
      current_csv_name: "{{ sub_info.resources[0].status.currentCSV }}"

  - name: Patch CSV Deployment Replicas to 0 using OC Patch
    ansible.builtin.shell:
      cmd: >
        oc patch csv {{ current_csv_name }} -n {{ install_namespace }} --type='json' 
        -p='[{"op":"replace", "path":"/spec/install/spec/deployments/0/spec/replicas", "value":0}]'
    register: csv_patch_status
    changed_when: csv_patch_status.rc == 0 and ('patched' in csv_patch_status.stdout or 'patched' in csv_patch_status.stderr)
    failed_when: csv_patch_status.rc != 0
    become: no

  - name: Delete the aap-postgres-15 Service
    kubernetes.core.k8s:
      api_version: v1 
      kind: Service
      name: aap-postgres-15
      namespace: "{{ install_namespace }}" 
      state: absent
    register: route_delete_status

  - name: Verify Route Deletion Status
    ansible.builtin.debug:
      msg: "Route deleted successfully."
    when: route_delete_status.deleted is defined and route_delete_status.deleted