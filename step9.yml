---
- name: configure community remote
  hosts: localhost
  tasks:

    - name: Get the Hub Admin Password Secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: aap-hub-admin-password 
        namespace: "{{ install_namespace }}"
      register: hub_secret     

    - name: Fail if Admin Password Secret was not found
      ansible.builtin.fail:
        msg: "Secret 'aap-hub-admin-password' not found."
      when: hub_secret.resources | length == 0             

    - name: Decode and Aggressively Clean Admin Password Fact
      ansible.builtin.set_fact:
        adminpw_string_raw: "{{ hub_secret.resources[0].data.password | b64decode | string }}"

    - name: Decode and Aggressively Clean Admin Password Fact
      ansible.builtin.set_fact:
        hub_admin_password: "{{ adminpw_string_raw | regex_replace('[^a-zA-Z0-9\\-]', '') | trim }}"

    - name: Debug Final Clean Password
      ansible.builtin.debug:
        msg: "Final Clean Admin Password: '{{ hub_admin_password }}'"    

    - name: Get AAP CR details
      kubernetes.core.k8s_info:
        api_version: aap.ansible.com/v1alpha1
        kind: AnsibleAutomationPlatform
        name: aap
        namespace: "{{ install_namespace }}"
      register: aap_cr_info      

    - name: Set Gateway Host Fact
      ansible.builtin.set_fact:
        controller_host: "{{ aap_cr_info.resources[0].status.URL | default('') }}"
      when: aap_cr_info.resources | length > 0 and 
            aap_cr_info.resources[0].status.URL is defined

    - name: Fail if Gateway URL was not found
      ansible.builtin.fail:
        msg: "FATAL: Could not extract the Platform Gateway URL from the AAP CR status (status.URL is missing or empty)."
      when: controller_host | length == 0  

    - name: Configure community collection_remote
      ansible.hub.collection_remote:
        name: community
        ah_host: "{{ controller_host }}"
        ah_username: admin
        ah_password: "{{ hub_admin_password }}"
        url: https://galaxy.ansible.com/api/
        requirements:
          - infra.controller_configuration  
          - community.general
          - kubernetes.core
          - awx.awx
          - ansible.posix      
      register: remote_status

    - name: Display Remote Update Status
      ansible.builtin.debug:
        msg: "Community Remote successfully updated with new collection list."
      when: remote_status is changed or remote_status is success      